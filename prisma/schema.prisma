// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  password String
  role     Role   @relation(fields: [roleId], references: [id])
  roleId   String
}

model Role {
  id    String @id @default(uuid())
  title String @unique
  user  User[]
}

model Partner {
  id    String  @id @default(uuid())
  name  String  @unique
  place Place[]
}

model AvgPrice {
  id        String  @id @default(uuid())
  symbol    String
  slug      String  @unique
  minPlaces Place[] @relation("minAvgPrice")
  maxPlaces Place[] @relation("maxAvgPrice")
}

model Place {
  id              String            @id @default(uuid())
  title           String
  description     String?           @default("")
  kitchen         String?           @default("")
  openingTime     String?           @default("")
  closingTime     String?           @default("")
  minAvgPrice     AvgPrice          @relation("minAvgPrice", fields: [minAvgPriceId], references: [id])
  maxAvgPrice     AvgPrice?         @relation("maxAvgPrice", fields: [maxAvgPriceId], references: [id])
  minAvgPriceId   String            @default("")
  maxAvgPriceId   String?
  partner         Partner           @relation(fields: [partnerId], references: [id], onDelete: Cascade)
  partnerId       String
  address         Address[]
  placeToCategory PlaceToCategory[]
  discount        Discount          @relation(fields: [discountId], references: [id])
  discountId      String

  @@unique([title, description, kitchen])
}

model Discount {
  id             String       @id @default(uuid())
  conditions     String[]
  amount         Int          @default(0)
  information    String?      @default("")
  discountType   DiscountType @relation(fields: [discountTypeId], references: [id])
  discountTypeId String
  place          Place[]

  @@unique([conditions, amount, information, discountTypeId])
}

model DiscountType {
  id       String     @id @default(uuid())
  title    String     @unique
  discount Discount[]
}

model Address {
  id        String  @id @default(uuid())
  city      String
  street    String
  house     String
  latitude  Decimal
  longitude Decimal
  place     Place   @relation(fields: [placeId], references: [id], onDelete: Cascade)
  placeId   String
}

model Category {
  id              String            @id @default(uuid())
  title           String            @unique
  placeToCategory PlaceToCategory[]
}

model PlaceToCategory {
  place      Place    @relation(fields: [placeId], references: [id], onDelete: Cascade)
  placeId    String
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId String
  assignedAt DateTime @default(now())

  @@id([placeId, categoryId])
}
